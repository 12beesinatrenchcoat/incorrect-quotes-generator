window.pronounTypes={subjectPn:{name:"subject pronoun",defaults:{none:"they"},examples:["This morning, {{input}} went to the park."]},objectPn:{name:"object pronoun",defaults:{none:"them"},examples:["I went with {{input}}."]},possessiveDet:{name:"possessive determiner",defaults:{none:"their"},examples:["{{name}} threw {{input}} frisbee."]},possessivePn:{name:"possessive pronoun",defaults:{none:"theirs",singular:"{{possessiveDet}}s",plural:"{{possessiveDet}}s"},examples:["At least I think it was {{input}}."]},reflexivePn:{name:"reflexive pronoun",defaults:{none:"themself",singular:"{{objectPn}}self",plural:"{{objectPn}}selves"},examples:["{{name}} can do it by {{input}}."]}};const pronounSets=[{subjectPn:"he",objectPn:"him",possessiveDet:"his",possessivePn:"his",reflexivePn:"himself"},{subjectPn:"she",objectPn:"her",possessiveDet:"her",possessivePn:"hers",reflexivePn:"herself"},{subjectPn:"it",objectPn:"it",possessiveDet:"its",possessivePn:"its",reflexivePn:"itself"}];window.createPronounsDiv=function(c){const r=document.createElement("div");r.className="pronouns-block";const i=document.createElement("button");r.appendChild(i),i.textContent="pronouns",i.onclick=function(){const n=this.parentNode.lastChild;n.style.display==="none"?n.style.display="flex":n.style.display="none"};const d=document.createElement("div");d.className="columns",d.style.display="none",r.appendChild(d);const p=document.createElement("div");p.className="pronouns",Object.keys(window.pronounTypes).forEach(n=>{const u=window.pronounTypes[n],s=document.createElement("input");s.classList.add("char-"+c,"pronoun",n),s.dataset.charNum=c,s.setAttribute("placeholder",u.defaults.none),s.setAttribute("name",n),s.addEventListener("input",l=>updatePronouns(l)),s.addEventListener("input",l=>window.updateFields(l)),s.addEventListener("placeholder-change",l=>window.updateFields(l));const{examples:b}=u;let a=b[Math.floor(Math.random()*b.length)];const h="{{",m="}}";let v=a.indexOf(h),g=a.indexOf(m),E="";const f=[];for(;v>=0;){const l=a.substring(v+2,g);switch(l){case"name":E=window.createField("name",c).outerHTML;break;case"input":{const x=a.split(h+l+m);f[0]=x[0],a=x[1];break}default:break}a=a.replace(h+l+m,E),v=a.indexOf(h),g=a.indexOf(m)}f[1]=a;const w=document.createElement("label");w.insertAdjacentHTML("afterbegin",f[0]),w.insertAdjacentElement("beforeend",s),w.insertAdjacentHTML("beforeend",f[1]),p.appendChild(w)});const e=document.createElement("div");e.className="pronounSettings";const t=document.createElement("label"),o=document.createElement("input");return o.type="checkbox",o.classList.add("char-"+c,"plural","pronoun-setting"),o.dataset.charNum=c,o.name="plural",o.addEventListener("change",n=>updatePronouns(n)),o.addEventListener("change",n=>window.updateFields(n)),t.appendChild(o),t.insertAdjacentText("beforeend","Treat as plural"),e.append(t),d.append(p,e),r};function updatePronouns(c){const r=c.target.classList[0].slice(5),{pronouns:i,settings:d}=window.charInputs[r],p=new Map;d.forEach(e=>{p.set(e.name,e.checked)}),pronounSets.some(e=>{if(i[0].value===e.subjectPn){console.info('matched "'+i[0].value+'" for character '+r+"! setting placeholder values for remaining inputs\u2026");for(const t of i)t.placeholder=e[t.name],t.dispatchEvent(new Event("placeholder-change"));return!0}return!1})||i.forEach(e=>{var n,u;p.get("plural")?e.placeholder=(n=window.pronounTypes[e.name].defaults.plural)!=null?n:window.pronounTypes[e.name].defaults.none:e.placeholder=(u=window.pronounTypes[e.name].defaults.singular)!=null?u:window.pronounTypes[e.name].defaults.none;let t=e.placeholder.indexOf("{{"),o=e.placeholder.indexOf("}}");for(;t>=0;){const s=e.placeholder.substring(t+2,o);e.placeholder=e.placeholder.replace("{{"+s+"}}",window.getCharacterInput(r,s)),t=e.placeholder.indexOf("{{"),o=e.placeholder.indexOf("}}")}e.dispatchEvent(new Event("placeholder-change"))})}
